<%
const harnessImport = installTestingLibrary
    ? `import { cleanup, render, screen } from 'solid-testing-library'`
    : `import { render } from 'solid-js/web'`
const renderCommand = installTestingLibrary
    ? `render(() => <ExampleComponent />)`
    : `render(<ExampleComponent />, container)`
%>
import { expect, $ } from '@wdio/globals'
<%- harnessImport %>
<% if (installTestingLibrary) { %>
import * as matchers from '@testing-library/jest-dom/matchers'
expect.extend(matchers)
<% } %>
import ExampleComponent from './Component.js'

describe('Preact Component Tests', () => {
    <% if (installTestingLibrary) { %>
    afterEach(cleanup)

    it('should test component with Testing Library', async () => {
        render(() => <ExampleComponent />)
        const component = screen.getByText(/count is 0/i)
        expect(component).toBeInTheDocument()

        await fireEvent.click(component)
        await fireEvent.click(component)

        expect(screen.getByText(/count is 2/i)).toBeInTheDocument()
    })
    <% } else { %>
    let container: Element

    beforeEach(() => {
        container = document.createElement('div')
        document.body.appendChild(container)
    })

    afterEach(() => {
        container?.remove()
    })
    <% } %>

    it('should test component with WebdriverIO', async () => {
        <%- renderCommand %>

        const component = await $('button=count is 0')
        await expect(component).toBePresent()

        await component.click()
        await component.click()

        await expect($('button=count is 2')).toBePresent()
    })
})
